{"version":3,"sources":["../../src/components/Transfer/Transfer.js"],"names":["TreeNode","CarouselWrap","props","setLeftData","data","checkedKeys","newData","map","indexOf","item","config","id","children","filter","setRightData","val","checkedRightKeys","value","num","length","push","onLeftExpand","expandedKeys","console","log","setState","expandedLeftKeys","autoExpandParentLeft","onLeftCheck","checkedLeftKeys","onLeftSelect","selectedKeys","info","selectedLeftKeys","onRightExpand","expandedRightKeys","autoExpandParentRight","onRightCheck","onRightSelect","selectedRightKeys","onChangeInput","e","target","leftData","state","clearTimeout","time","setTimeout","setKeys","name","onChangeLeft","checked","checkedLeft","onChangeRight","rightData","checkedRight","onClickLeft","JSON","parse","checkedAllKeys","newRightData","treeData","onClickRight","renderTreeNodes","style","height","width","fontSize","newProps","styles","contentBox","inputBox","treeBox","checkbox","Tree","parseInt","conterBox","left","right","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEQA,Q,kBAAAA,Q;;IAEaC,Y;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kJACXA,KADW;;AAAA,UA0BnBC,WA1BmB,GA0BL,UAACC,IAAD,EAAOC,WAAP,EAAuB;AACnC,UAAIC,UAAUF,KAAKG,GAAL,CAAS,gBAAQ;AAC7B,YAAGF,YAAYG,OAAZ,CAAoBC,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAApB,MAAkF,CAAC,CAAtF,EAAyF;AACvF,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,cAAGF,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAH,EAAwE;AACtEH,iBAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,IAAsE,MAAKT,WAAL,CAAiBM,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAjB,EAAsFP,WAAtF,CAAtE;AACD;AACF;AACD,eAAOI,IAAP;AACD,OATa,CAAd;AAUA,aAAOH,QAAQO,MAAR,CAAe;AAAA,eAAQJ,IAAR;AAAA,OAAf,CAAP;AACD,KAtCkB;;AAAA,UAwCnBK,YAxCmB,GAwCJ,UAACV,IAAD,EAAOC,WAAP,EAAoBU,GAApB,EAAyBC,gBAAzB,EAA8C;AAC3D,UAAIV,UAAUF,KAAKG,GAAL,CAAS,gBAAQ;AAC7B,YAAIU,QAAQ,EAACC,KAAK,CAAN,EAAZ;AACA,YAAGb,YAAYG,OAAZ,CAAoBC,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAApB,MAAkF,CAAC,CAAtF,EAAwF;AACtFI,iBAAOA,IAAIG,GAAJ,EAAP;AACA,iBAAOT,IAAP;AACD,SAHD,MAGO;AACL,cAAIA,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAJ,EAAyE;AACvEH,iBAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,IAAsE,MAAKE,YAAL,CAAkBL,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAlB,EAAuFP,WAAvF,EAAoGY,KAApG,EAA2GD,gBAA3G,CAAtE;AACA,gBAAGP,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,EAAoEO,MAApE,GAA6E,CAAhF,EAAmF;AACjFJ,qBAAOA,IAAIG,GAAJ,EAAP;AACD,aAFD,MAEO;AACLT,mBAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,IAAsE,IAAtE;AACD;AACF,WAPD,MAOO;AACL,mBAAO,IAAP;AACD;AACF;AACD,YAAGK,MAAMC,GAAN,KAAc,CAAjB,EAAoB;AAClBF,8BAAoBA,iBAAiBI,IAAjB,CAAsBX,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAAtB,CAApB;AACD;AACD,YAAGM,MAAMC,GAAN,KAAc,CAAjB,EAAoB;AAClB,iBAAO,IAAP;AACD;AACD,eAAOT,IAAP;AACD,OAxBa,CAAd;AAyBA,aAAOH,QAAQO,MAAR,CAAe;AAAA,eAAQJ,IAAR;AAAA,OAAf,CAAP;AACD,KAnEkB;;AAAA,UAsEnBY,YAtEmB,GAsEJ,UAACC,YAAD,EAAkB;AAC/BC,cAAQC,GAAR,CAAY,cAAZ,EAA4BF,YAA5B;AACA,YAAKG,QAAL,CAAc;AACZC,0BAAkBJ,YADN;AAEZK,8BAAsB;AAFV,OAAd;AAID,KA5EkB;;AAAA,UA8EnBC,WA9EmB,GA8EL,UAACvB,WAAD,EAAiB;AAC7BkB,cAAQC,GAAR,CAAY,aAAZ,EAA2BnB,WAA3B;AACA,YAAKoB,QAAL,CAAc,EAAEI,iBAAiBxB,WAAnB,EAAd;AACD,KAjFkB;;AAAA,UAmFnByB,YAnFmB,GAmFJ,UAACC,YAAD,EAAeC,IAAf,EAAwB;AACrCT,cAAQC,GAAR,CAAY,cAAZ,EAA4BQ,IAA5B;AACA,YAAKP,QAAL,CAAc,EAAEQ,kBAAkBF,YAApB,EAAd;AACD,KAtFkB;;AAAA,UAwFnBG,aAxFmB,GAwFH,UAACZ,YAAD,EAAkB;AAChCC,cAAQC,GAAR,CAAY,eAAZ,EAA6BF,YAA7B;AACA,YAAKG,QAAL,CAAc;AACZU,2BAAmBb,YADP;AAEZc,+BAAuB;AAFX,OAAd;AAID,KA9FkB;;AAAA,UAgGnBC,YAhGmB,GAgGJ,UAACrB,gBAAD,EAAsB;AACnCO,cAAQC,GAAR,CAAY,cAAZ,EAA4BR,gBAA5B;AACA,YAAKS,QAAL,CAAc,EAAET,kCAAF,EAAd;AACD,KAnGkB;;AAAA,UAqGnBsB,aArGmB,GAqGH,UAACP,YAAD,EAAeC,IAAf,EAAwB;AACtCT,cAAQC,GAAR,CAAY,eAAZ,EAA6BQ,IAA7B;AACA,YAAKP,QAAL,CAAc,EAAEc,mBAAmBR,YAArB,EAAd;AACD,KAxGkB;;AAAA,UA0GnBS,aA1GmB,GA0GH,UAACC,CAAD,EAAO;AACrBlB,cAAQC,GAAR,CAAYiB,EAAEC,MAAF,CAASzB,KAArB;AACA,UAAIA,QAAQwB,EAAEC,MAAF,CAASzB,KAArB;AAFqB,UAGhB0B,QAHgB,GAGJ,MAAKC,KAHD,CAGhBD,QAHgB;;AAIrB,UAAId,kBAAkB,EAAtB;AACAgB,mBAAa,MAAKC,IAAlB;AACA,YAAKA,IAAL,GAAYC,WAAW,YAAM;AAC3B,YAAIC,UAAU,SAAVA,OAAU,CAAC5C,IAAD,EAAU;AACtBA,eAAKG,GAAL,CAAS,gBAAQ;AACf,gBAAGE,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBuC,IAAvC,IAA+C,OAApD,EAA6DzC,OAA7D,CAAqES,KAArE,MAAgF,CAAC,CAApF,EAAuF;AACrFY,8BAAgBT,IAAhB,CAAqBX,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAArB;AACD,aAFD,MAEO;AACL,kBAAGF,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAH,EAAwE;AACtEoC,wBAAQvC,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAR;AACD;AACF;AACF,WARD;AASD,SAVD;AAWAoC,gBAAQL,QAAR;AACApB,gBAAQC,GAAR,CAAYK,eAAZ;AACA,cAAKJ,QAAL,CAAc,EAAEI,gCAAF,EAAd;AACD,OAfW,EAeT,GAfS,CAAZ;AAgBD,KAhIkB;;AAAA,UAkInBqB,YAlImB,GAkIJ,UAACT,CAAD,EAAO;AACpBlB,cAAQC,GAAR,CAAYiB,CAAZ;AADoB,UAEfE,QAFe,GAEH,MAAKC,KAFF,CAEfD,QAFe;;AAGpB,UAAId,kBAAkB,EAAtB;AACA,UAAGY,EAAEC,MAAF,CAASS,OAAZ,EAAqB;AACnB,YAAIH,UAAU,SAAVA,OAAU,CAAC5C,IAAD,EAAU;AACtBA,eAAKG,GAAL,CAAS,gBAAQ;AACfsB,4BAAgBT,IAAhB,CAAqBX,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAArB;AACA,gBAAGF,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAH,EAAwE;AACtEoC,sBAAQvC,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAR;AACD;AACF,WALD;AAMD,SAPD;AAQAoC,gBAAQL,QAAR;AACD;AACD,YAAKlB,QAAL,CAAc,EAAEI,gCAAF,EAAoBuB,aAAaX,EAAEC,MAAF,CAASS,OAA1C,EAAd;AACD,KAlJkB;;AAAA,UAoJnBE,aApJmB,GAoJH,UAACZ,CAAD,EAAO;AAAA,UAChBa,SADgB,GACH,MAAKV,KADF,CAChBU,SADgB;;AAErB,UAAItC,mBAAmB,EAAvB;AACA,UAAGyB,EAAEC,MAAF,CAASS,OAAZ,EAAqB;AACnB,YAAIH,UAAU,SAAVA,OAAU,CAAC5C,IAAD,EAAU;AACtBA,eAAKG,GAAL,CAAS,gBAAQ;AACfS,6BAAiBI,IAAjB,CAAsBX,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAAtB;AACA,gBAAGF,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAH,EAAwE;AACtEoC,sBAAQvC,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAR;AACD;AACF,WALD;AAMD,SAPD;AAQAoC,gBAAQM,SAAR;AACD;AACD,YAAK7B,QAAL,CAAc,EAAET,kCAAF,EAAoBuC,cAAcd,EAAEC,MAAF,CAASS,OAA3C,EAAd;AACD,KAnKkB;;AAAA,UAqKnBK,WArKmB,GAqKL,YAAM;AAAA,wBAC+B,MAAKZ,KADpC;AAAA,UACbvC,WADa,eACbA,WADa;AAAA,UACAW,gBADA,eACAA,gBADA;AAAA,UACkBsC,SADlB,eACkBA,SADlB;;AAElB,YAAKxC,YAAL,CAAkB2C,KAAKC,KAAL,CAAW,yBAAeJ,SAAf,CAAX,CAAlB,EAAyDG,KAAKC,KAAL,CAAW,yBAAe1C,gBAAf,CAAX,CAAzD,EAAuG,IAAvG,EAA6GA,gBAA7G;AACA,UAAI2C,iBAAiBtD,YAAYQ,MAAZ,CAAmB;AAAA,eAAQG,iBAAiBR,OAAjB,CAAyBC,IAAzB,MAAmC,CAAC,CAA5C;AAAA,OAAnB,CAArB;AACA,UAAImD,eAAe,MAAK9C,YAAL,CAAkB2C,KAAKC,KAAL,CAAW,yBAAe,MAAKxD,KAAL,CAAW2D,QAAX,IAAuB,EAAtC,CAAX,CAAlB,EAAyEF,cAAzE,CAAnB;AACA,UAAIhB,WAAW,MAAKxC,WAAL,CAAiBsD,KAAKC,KAAL,CAAW,yBAAe,MAAKxD,KAAL,CAAW2D,QAAX,IAAuB,EAAtC,CAAX,CAAjB,EAAwEF,cAAxE,CAAf;;AAEApC,cAAQC,GAAR,CAAYoC,YAAZ,EAA0BjB,QAA1B;AACA,YAAKlB,QAAL,CAAc;AACZ6B,mBAAWM,YADC;AAEZjB,0BAFY;AAGZ3B,0BAAkB,EAHN;AAIZuC,sBAAc,KAJF;AAKZlD,qBAAasD;AALD,OAAd;AAQD,KArLkB;;AAAA,UAuLnBG,YAvLmB,GAuLJ,YAAM;AAAA,yBACkB,MAAKlB,KADvB;AAAA,UACdf,eADc,gBACdA,eADc;AAAA,UACGxB,WADH,gBACGA,WADH;;AAEnB,UAAIsD,4DAAqB9B,eAArB,oCAAyCxB,WAAzC,EAAJ;AACAkB,cAAQC,GAAR,CAAYmC,cAAZ;;AAEA,UAAIL,YAAY,MAAKxC,YAAL,CAAkB2C,KAAKC,KAAL,CAAW,yBAAe,MAAKxD,KAAL,CAAW2D,QAAX,IAAuB,EAAtC,CAAX,CAAlB,EAAyEF,cAAzE,CAAhB;AACA,UAAIhB,WAAW,MAAKxC,WAAL,CAAiBsD,KAAKC,KAAL,CAAW,yBAAe,MAAKxD,KAAL,CAAW2D,QAAX,IAAuB,EAAtC,CAAX,CAAjB,EAAwEF,cAAxE,CAAf;;AAEApC,cAAQC,GAAR,CAAY8B,SAAZ,EAAuBX,QAAvB;AACA,YAAKlB,QAAL,CAAc;AACZ6B,4BADY;AAEZX,0BAFY;AAGZd,yBAAiB,EAHL;AAIZuB,qBAAa,KAJD;AAKZ/C,qBAAasD;AALD,OAAd;AAQD,KAxMkB;;AAAA,UA0MnBI,eA1MmB,GA0MD;AAAA,aAAQ3D,KAAKG,GAAL,CAAS,UAACE,IAAD,EAAU;AAAA,gCACyB,MAAKP,KAD9B,CACtC8D,KADsC;AAAA,YACtCA,KADsC,qCAC9B,EAACC,QAAQ,OAAT,EAAkBC,OAAO,OAAzB,EAAkCC,UAAU,MAA5C,EAD8B;;AAE3C,YAAI1D,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAAJ,EAAyE;AACvE,iBACE;AAAC,oBAAD;AAAA,cAAU,OAAO,EAACuD,UAAUH,MAAMG,QAAjB,EAAjB,EAA6C,OAAO1D,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBuC,IAAvC,IAA+C,OAApD,CAApD,EAAkH,KAAKxC,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAAvH;AACG,kBAAKoD,eAAL,CAAqBtD,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBE,QAAvC,IAAmD,UAAxD,CAArB;AADH,WADF;AAKD;AACD,eAAO,8BAAC,QAAD,IAAU,OAAO,EAACuD,UAAUH,MAAMG,QAAjB,EAAjB,EAA6C,OAAO1D,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBuC,IAAvC,IAA+C,OAApD,CAApD,EAAkH,KAAKxC,KAAK,MAAKP,KAAL,CAAWQ,MAAX,IAAqB,MAAKR,KAAL,CAAWQ,MAAX,CAAkBC,EAAvC,IAA6C,KAAlD,CAAvH,GAAP;AACD,OAVyB,CAAR;AAAA,KA1MC;;AAEjB,UAAKiC,KAAL,GAAa;AACXlB,wBAAkB,EADP;AAEXC,4BAAsB,IAFX;AAGXE,uBAAiB,EAHN;AAIXI,wBAAkB,EAJP;AAKXE,yBAAmB,EALR;AAMXC,6BAAuB,IANZ;AAOXpB,wBAAkB,EAPP;AAQXuB,yBAAmB,EARR;AASXlC,mBAAa,EATF;AAUX+C,mBAAa,KAVF;AAWXG,oBAAc,KAXH;AAYXD,iBAAW,EAZA;AAaXX,gBAAU,MAAKzC,KAAL,CAAW2D,QAAX,IAAuB;AAbtB,KAAb;AAFiB;AAiBlB;;;;8CAGyBO,Q,EAAU;AAClC,UAAGA,YAAYA,SAASP,QAAxB,EAAkC;AAChC,aAAKpC,QAAL,CAAc,EAACkB,UAAUyB,SAASP,QAApB,EAAd;AACD;AACF;;;6BA8LQ;AAAA,mBACgD,KAAKjB,KADrD;AAAA,UACFU,SADE,UACFA,SADE;AAAA,UACSX,QADT,UACSA,QADT;AAAA,UACmBS,WADnB,UACmBA,WADnB;AAAA,UACgCG,YADhC,UACgCA,YADhC;AAAA,yBAE6D,KAAKrD,KAFlE,CAEF8D,KAFE;AAAA,UAEFA,KAFE,gCAEM,EAACC,QAAQ,OAAT,EAAkBC,OAAO,OAAzB,EAAkCC,UAAU,MAA5C,EAFN;;AAGP,aACE;AAAA;AAAA,UAAK,WAAWE,gBAAOC,UAAvB,EAAmC,OAAO,EAACH,UAAUH,MAAMG,QAAjB,EAA1C;AACE;AAAA;AAAA,YAAK,WAAWE,gBAAOE,QAAvB;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,2DAAO,UAAU,KAAK/B,aAAtB,EAAqC,OAAO,EAAC2B,UAAUH,MAAMG,QAAjB,EAA5C,EAAwE,aAAY,8DAApF;AAFF,SADF;AAKE;AAAA;AAAA,YAAK,WAAWE,gBAAOG,OAAvB,EAAgC,OAAOR,KAAvC;AACE;AAAA;AAAA,cAAK,WAAWK,gBAAOI,QAAvB;AACE;AAAA;AAAA,gBAAU,OAAO,EAACN,UAAUH,MAAMG,QAAjB,EAAjB,EAA6C,SAASf,WAAtD,EAAmE,UAAU,KAAKF,YAAlF;AAAA;AAAA;AADF,WADF;AAIE;AAAA;AAAA,cAAK,WAAWmB,gBAAOK,IAAvB,EAA6B,OAAO,EAACT,QAAWU,SAASX,MAAMC,MAAf,IAAyB,EAApC,OAAD,EAApC;AACE;AAAA;AAAA;AACE,+BADF;AAEE,sCAFF;AAGE,0BAAU,KAAK5C,YAHjB;AAIE,8BAAc,KAAKuB,KAAL,CAAWlB,gBAJ3B;AAKE,kCAAkB,KAAKkB,KAAL,CAAWjB,oBAL/B;AAME,yBAAS,KAAKC,WANhB;AAOE,6BAAa,KAAKgB,KAAL,CAAWf,eAP1B;AAQE,0BAAU,KAAKC,YARjB;AASE,8BAAc,KAAKc,KAAL,CAAWX;AAT3B;AAWG,mBAAK8B,eAAL,CAAqBpB,QAArB;AAXH;AADF;AAJF,SALF;AAyBE;AAAA;AAAA,YAAK,WAAW0B,gBAAOO,SAAvB,EAAkC,OAAO,EAACX,QAAQD,MAAMC,MAAf,EAAzC;AACE;AAAA;AAAA,cAAQ,WAAWI,gBAAOQ,IAA1B,EAAgC,MAAK,OAArC,EAA6C,MAAK,SAAlD,EAA4D,SAAS,KAAKrB,WAA1E;AACE,4DAAM,MAAK,MAAX;AADF,WADF;AAIE;AAAA;AAAA,cAAQ,WAAWa,gBAAOS,KAA1B,EAAiC,MAAK,OAAtC,EAA8C,MAAK,SAAnD,EAA6D,SAAS,KAAKhB,YAA3E;AACE,4DAAM,MAAK,OAAX;AADF;AAJF,SAzBF;AAiCE;AAAA;AAAA,YAAK,WAAWO,gBAAOG,OAAvB,EAAgC,OAAOR,KAAvC;AACE;AAAA;AAAA,cAAK,WAAWK,gBAAOI,QAAvB;AACE;AAAA;AAAA,gBAAU,OAAO,EAACN,UAAUH,MAAMG,QAAjB,EAAjB,EAA6C,SAASZ,YAAtD,EAAoE,UAAU,KAAKF,aAAnF;AAAA;AAAA;AADF,WADF;AAIE;AAAA;AAAA,cAAK,WAAWgB,gBAAOK,IAAvB,EAA6B,OAAO,EAACT,QAAWU,SAASX,MAAMC,MAAf,IAAyB,EAApC,OAAD,EAApC;AACE;AAAA;AAAA;AACE,+BADF;AAEE,sCAFF;AAGE,0BAAU,KAAK/B,aAHjB;AAIE,8BAAc,KAAKU,KAAL,CAAWT,iBAJ3B;AAKE,kCAAkB,KAAKS,KAAL,CAAWR,qBAL/B;AAME,yBAAS,KAAKC,YANhB;AAOE,6BAAa,KAAKO,KAAL,CAAW5B,gBAP1B;AAQE,0BAAU,KAAKsB,aARjB;AASE,8BAAc,KAAKM,KAAL,CAAWL;AAT3B;AAWG,mBAAKwB,eAAL,CAAqBT,SAArB;AAXH;AADF;AAJF;AAjCF,OADF;AAwDD;;;EAlRuCyB,gB;;kBAArB9E,Y","file":"Transfer.js","sourcesContent":["import styles from './index.css';\nimport React, { Component } from 'react';\nimport { Tree, Button, Icon, Checkbox, Input } from 'antd';\nconst { TreeNode } = Tree;\n\nexport default class CarouselWrap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedLeftKeys: [],\n      autoExpandParentLeft: true,\n      checkedLeftKeys: [],\n      selectedLeftKeys: [],\n      expandedRightKeys: [],\n      autoExpandParentRight: true,\n      checkedRightKeys: [],\n      selectedRightKeys: [],\n      checkedKeys: [],\n      checkedLeft: false,\n      checkedRight: false,\n      rightData: [],\n      leftData: this.props.treeData || [],\n    }\n  }\n\n\n  componentWillReceiveProps(newProps) {\n    if(newProps && newProps.treeData) {\n      this.setState({leftData: newProps.treeData})\n    }\n  }\n\n  setLeftData = (data, checkedKeys) => {\n    let newData = data.map(item => {\n      if(checkedKeys.indexOf(item[this.props.config && this.props.config.id || 'key']) !== -1) {\n        return null;\n      } else {\n        if(item[this.props.config && this.props.config.children || 'children']) {\n          item[this.props.config && this.props.config.children || 'children'] = this.setLeftData(item[this.props.config && this.props.config.children || 'children'], checkedKeys);\n        }\n      }\n      return item;\n    });\n    return newData.filter(item => item);\n  };\n\n  setRightData = (data, checkedKeys, val, checkedRightKeys) => {\n    let newData = data.map(item => {\n      let value = {num: 0};\n      if(checkedKeys.indexOf(item[this.props.config && this.props.config.id || 'key']) !== -1){\n        val && val.num ++;\n        return item;\n      } else {\n        if (item[this.props.config && this.props.config.children || 'children']) {\n          item[this.props.config && this.props.config.children || 'children'] = this.setRightData(item[this.props.config && this.props.config.children || 'children'], checkedKeys, value, checkedRightKeys);\n          if(item[this.props.config && this.props.config.children || 'children'].length > 0) {\n            val && val.num ++;\n          } else {\n            item[this.props.config && this.props.config.children || 'children'] = null;\n          }\n        } else {\n          return null;\n        }\n      }\n      if(value.num !== 0) {\n        checkedRightKeys && checkedRightKeys.push(item[this.props.config && this.props.config.id || 'key']);\n      }\n      if(value.num === 0) {\n        return null;\n      }\n      return item;\n    });\n    return newData.filter(item => item);\n  };\n\n\n  onLeftExpand = (expandedKeys) => {\n    console.log('onLeftExpand', expandedKeys);\n    this.setState({\n      expandedLeftKeys: expandedKeys,\n      autoExpandParentLeft: false,\n    });\n  };\n\n  onLeftCheck = (checkedKeys) => {\n    console.log('onLeftCheck', checkedKeys);\n    this.setState({ checkedLeftKeys: checkedKeys });\n  };\n\n  onLeftSelect = (selectedKeys, info) => {\n    console.log('onLeftSelect', info);\n    this.setState({ selectedLeftKeys: selectedKeys });\n  };\n\n  onRightExpand = (expandedKeys) => {\n    console.log('onRightExpand', expandedKeys);\n    this.setState({\n      expandedRightKeys: expandedKeys,\n      autoExpandParentRight: false,\n    });\n  };\n\n  onRightCheck = (checkedRightKeys) => {\n    console.log('onRightCheck', checkedRightKeys);\n    this.setState({ checkedRightKeys });\n  };\n\n  onRightSelect = (selectedKeys, info) => {\n    console.log('onRightSelect', info);\n    this.setState({ selectedRightKeys: selectedKeys });\n  };\n\n  onChangeInput = (e) => {\n    console.log(e.target.value);\n    let value = e.target.value;\n    let {leftData} = this.state;\n    let checkedLeftKeys = [];\n    clearTimeout(this.time);\n    this.time = setTimeout(() => {\n      let setKeys = (data) => {\n        data.map(item => {\n          if(item[this.props.config && this.props.config.name || 'title'].indexOf(value) !== -1) {\n            checkedLeftKeys.push(item[this.props.config && this.props.config.id || 'key']);\n          } else {\n            if(item[this.props.config && this.props.config.children || 'children']) {\n              setKeys(item[this.props.config && this.props.config.children || 'children']);\n            }\n          }\n        })\n      };\n      setKeys(leftData);\n      console.log(checkedLeftKeys);\n      this.setState({ checkedLeftKeys });\n    }, 300);\n  };\n\n  onChangeLeft = (e) => {\n    console.log(e);\n    let {leftData} = this.state;\n    let checkedLeftKeys = [];\n    if(e.target.checked) {\n      let setKeys = (data) => {\n        data.map(item => {\n          checkedLeftKeys.push(item[this.props.config && this.props.config.id || 'key']);\n          if(item[this.props.config && this.props.config.children || 'children']) {\n            setKeys(item[this.props.config && this.props.config.children || 'children']);\n          }\n        })\n      };\n      setKeys(leftData);\n    }\n    this.setState({ checkedLeftKeys,  checkedLeft: e.target.checked });\n  };\n\n  onChangeRight = (e) => {\n    let {rightData} = this.state;\n    let checkedRightKeys = [];\n    if(e.target.checked) {\n      let setKeys = (data) => {\n        data.map(item => {\n          checkedRightKeys.push(item[this.props.config && this.props.config.id || 'key']);\n          if(item[this.props.config && this.props.config.children || 'children']) {\n            setKeys(item[this.props.config && this.props.config.children || 'children']);\n          }\n        })\n      };\n      setKeys(rightData);\n    }\n    this.setState({ checkedRightKeys, checkedRight: e.target.checked });\n  };\n\n  onClickLeft = () => {\n    let {checkedKeys, checkedRightKeys, rightData} = this.state;\n    this.setRightData(JSON.parse(JSON.stringify(rightData)), JSON.parse(JSON.stringify(checkedRightKeys)), null, checkedRightKeys);\n    let checkedAllKeys = checkedKeys.filter(item => checkedRightKeys.indexOf(item) === -1);\n    let newRightData = this.setRightData(JSON.parse(JSON.stringify(this.props.treeData || [])), checkedAllKeys);\n    let leftData = this.setLeftData(JSON.parse(JSON.stringify(this.props.treeData || [])), checkedAllKeys);\n\n    console.log(newRightData, leftData);\n    this.setState({\n      rightData: newRightData,\n      leftData,\n      checkedRightKeys: [],\n      checkedRight: false,\n      checkedKeys: checkedAllKeys\n    });\n\n  };\n\n  onClickRight = () => {\n    let {checkedLeftKeys, checkedKeys} = this.state;\n    let checkedAllKeys = [...checkedLeftKeys, ...checkedKeys]\n    console.log(checkedAllKeys);\n\n    let rightData = this.setRightData(JSON.parse(JSON.stringify(this.props.treeData || [])), checkedAllKeys);\n    let leftData = this.setLeftData(JSON.parse(JSON.stringify(this.props.treeData || [])), checkedAllKeys);\n\n    console.log(rightData, leftData);\n    this.setState({\n      rightData,\n      leftData,\n      checkedLeftKeys: [],\n      checkedLeft: false,\n      checkedKeys: checkedAllKeys\n    });\n\n  };\n\n  renderTreeNodes = data => data.map((item) => {\n    let {style = {height: '400px', width: '300px', fontSize: '12px'}} = this.props;\n    if (item[this.props.config && this.props.config.children || 'children']) {\n      return (\n        <TreeNode style={{fontSize: style.fontSize}} title={item[this.props.config && this.props.config.name || 'title']} key={item[this.props.config && this.props.config.id || 'key']}>\n          {this.renderTreeNodes(item[this.props.config && this.props.config.children || 'children'])}\n        </TreeNode>\n      );\n    }\n    return <TreeNode style={{fontSize: style.fontSize}} title={item[this.props.config && this.props.config.name || 'title']} key={item[this.props.config && this.props.config.id || 'key']} />;\n  });\n\n  render() {\n    let {rightData, leftData, checkedLeft, checkedRight} = this.state;\n    let {style = {height: '400px', width: '300px', fontSize: '12px'}} = this.props;\n    return (\n      <div className={styles.contentBox} style={{fontSize: style.fontSize}}>\n        <div className={styles.inputBox}>\n          <div>搜索目标类目：</div>\n          <Input onChange={this.onChangeInput} style={{fontSize: style.fontSize}} placeholder=\"请输入需要匹配的类目\" />\n        </div>\n        <div className={styles.treeBox} style={style}>\n          <div className={styles.checkbox}>\n            <Checkbox style={{fontSize: style.fontSize}} checked={checkedLeft} onChange={this.onChangeLeft}>全选</Checkbox>\n          </div>\n          <div className={styles.Tree} style={{height: `${parseInt(style.height) - 40}px`}}>\n            <Tree\n              checkable\n              defaultExpandAll\n              onExpand={this.onLeftExpand}\n              expandedKeys={this.state.expandedLeftKeys}\n              autoExpandParent={this.state.autoExpandParentLeft}\n              onCheck={this.onLeftCheck}\n              checkedKeys={this.state.checkedLeftKeys}\n              onSelect={this.onLeftSelect}\n              selectedKeys={this.state.selectedLeftKeys}\n            >\n              {this.renderTreeNodes(leftData)}\n            </Tree>\n          </div>\n        </div>\n        <div className={styles.conterBox} style={{height: style.height}}>\n          <Button className={styles.left} size=\"small\" type=\"primary\" onClick={this.onClickLeft}>\n            <Icon type=\"left\" />\n          </Button>\n          <Button className={styles.right} size=\"small\" type=\"primary\" onClick={this.onClickRight}>\n            <Icon type=\"right\" />\n          </Button>\n        </div>\n        <div className={styles.treeBox} style={style}>\n          <div className={styles.checkbox}>\n            <Checkbox style={{fontSize: style.fontSize}} checked={checkedRight} onChange={this.onChangeRight}>全选</Checkbox>\n          </div>\n          <div className={styles.Tree} style={{height: `${parseInt(style.height) - 40}px`}}>\n            <Tree\n              checkable\n              defaultExpandAll\n              onExpand={this.onRightExpand}\n              expandedKeys={this.state.expandedRightKeys}\n              autoExpandParent={this.state.autoExpandParentRight}\n              onCheck={this.onRightCheck}\n              checkedKeys={this.state.checkedRightKeys}\n              onSelect={this.onRightSelect}\n              selectedKeys={this.state.selectedRightKeys}\n            >\n              {this.renderTreeNodes(rightData)}\n            </Tree>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]}